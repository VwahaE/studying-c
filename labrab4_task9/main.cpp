/*
* Лабораторная работа No4
* Исследование функций С++ в IDE
* (интегрированной среде разработки) Qt Creator
*
* Задание 9
* "Строки. Массивы. Рекурсии"
* Типы данных
* Developer: Mochalov E.
*/
/*==========================================================================*/
/* INCLUDE LIBS */
/*==========================================================================*/
/* Подключаем библиотеку для ввода/вывода */
#include <iostream>

/* Cобственный заголовочный файл */
#include "task9.h"

int main() {

    std::cout << "\tЗадание 9\n";

    /* Создайте массив любого типа данных, количество элементов в котором введет
пользователь. Заполните его с помощью рандома rand() сделайте сортировку массива любым
методом (можно самостоятельно изучить методы ?Перебора?, ?Пузырька?, ?Хаора? и/или
?Пирамидальной? сортировкой). Используйте парадигму много-файловых программ; в
отдельном модуле будет отдельный метод сортировки.*/

    // Инициализируем переменную значением 0
    int length(0);
    std::cout << "Введите целое число кол-во элементов в массиве: ";

    std::cin >> length;

    // объявили массив размером указанным пользователем
    int userArray[length];
    std::cout << "\n";

    // решение //
    /*
     * проба работы с циклом for each
    srand(static_cast<unsigned int>(time(0))); // устанавливаем значение системных часов в качестве стартового числа
     for(int elem : userArray) {
         elem = rand();
     }
    */
    arrayRandomFilling(userArray, length);
    printArray(userArray, length);

    std::cout << "\n";
    sortBubble(userArray, length);
/*
    // Сортировка массива методом ?Пузырька?
    for (int i = 0; i < length; i++){
        for (int j = 0; j < length - 1; j++){
            if(userArray[j] > userArray[j+1]){

                //int newVal = userArray[j];

                // Меняем местами наше начальное наименьшее число с тем, которое мы обнаружили
                std::swap(userArray[j], userArray[j+1]);
                // userArray[j] = userArray[j+1];
                // userArray[j+1] = newVal;
            }
        }
    }
*/
    printArray(userArray, length);
    /*
     std::cout << "\n";
     for(int elem : userArray){
         std::cout <<  elem << ' ';
     }
*/
    std::cout << "\n\n";

    return 0;
}
