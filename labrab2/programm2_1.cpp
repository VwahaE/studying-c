/*
* Лабораторная работа No1
* Исследование ввода-вывода стандартной библиотеки С++
*
* Программа 2-1.
* “Калькулятор для расчета идеального веса“.
* Типы данных
* Developer: Mochalov E.
*/
/*==========================================================================*/
/* INCLUDE LIBS */
/*==========================================================================*/

/* Подключаем библиотеку для ввода/вывода */
#include <iostream>

/* Подключаем библиотеку для printf/scanf */
#include <stdio.h>

/* Подключаем библиотеку манипуляторов форматирования */
#include <iomanip>

/* Подключаем библиотеку набора математических функций */
#include <cmath>

/* Пространство имен std */
using namespace std;

/* Объявление функции (используется CamelCase) расчета "Формула Брока" мужчин/женщин
 * расчета идеального веса.
 * для мужчин: вес = (рост, см - 100) * 0.9
 * для женщин: вес = (рост, см - 100) * 0.85
 * Функция возвращает значение с плавающей запятой.
 * Функция имеет два параметра типа double:uHeight и типа bool:uSex.
*/
double idealWeight(double uHeight, bool uSex){

    // обявление переменной в функции
    double perfectWeight;

    // используем тернарный оператор ? (альтернативу) ветвления if/else.
    (uSex == true) ? perfectWeight = (uHeight - 100) * 0.9 :
            perfectWeight = (uHeight - 100) * 0.85;

    // Возвращаемое значение
    return perfectWeight;
}

/* Объявление функции (используется CamelCase) расчета "Идеального веса по индексу массы тела.
 * Функция возвращает значение с плавающей запятой.
 * Функция имеет два параметра типа double:userW и userH.
*/
double idealIndexWeight(double userW, double userH){

    // Возвращаемое значение
    return userW/pow(userH/100, 2);
}

/* Объявление функции (используется CamelCase) вывода ИМТ Категорий
 в зависимости от значения параметра iIndex
16 и менее Выраженный дефицит массы
16?18,5 Недостаточная (дефицит) масса тела
18,5?25 Норма
25?30 Избыточная масса тела (предожирение)
30?35 Ожирение первой степени
35?40 Ожирение второй степени
40 и более Ожирение третьей степени (морбидное)
void означает, что функция не возвращает значения
функция имеет один параметр типа double:iIndex
*/
void categoryIndexPrint(double iIndex){

    /* Использование оператора ветвления if(условие).
     * Оператор сравнение: меньше чем
     * Вывод значения.
    */
    if (iIndex < 16 ) cout << "и менее Выраженный дефицит массы";

    /* Использование оператора ветвления if(условие).
     * Сравнение: больше чем или равно. && логическое И (AND). Сравнение: меньше чем
     * Вывод значения.
    */
    if (iIndex >= 16 && iIndex < 18.5) cout << "Недостаточная (дефицит) масса тела";
    if (iIndex >= 18.5 && iIndex < 25) cout << "Норма";
    if (iIndex >= 25 && iIndex < 30) cout << "Избыточная масса тела (предожирение)";
    if (iIndex >= 30 && iIndex < 35) cout << "Ожирение первой степени";
    if (iIndex >= 35 && iIndex < 40) cout << "Ожирение второй степени";
    if (iIndex > 40 ) cout <<"Ожирение третьей степени (морбидное)";
}

/* Функция вывода в зависимости от значения параметров
 *  uSex1 / uAge
     Пол /Возраст (лет) Норма ИМТ
     Мужчины (19 - 24) 21,4
     Мужчины (25 - 34) 21,6
     Мужчины (35 - 44) 22,9
     Мужчины (45 - 54) 25,8
     Мужчины (> 55) 26,6
     Женщины (19 - 24) 19,5
     Женщины (25 - 34) 23,2
     Женщины (35 - 44) 23,4
     Женщины (45 - 54) 25,2
     Женщины (> 55) 27,3
     void означает, что функция не возвращает значения
     Функция имеет два параметра типа double:uAge и типа uSex1
*/
void standardIndexPrint(double uAge, bool uSex1 ){
    /* Использование оператора ветвления if(условие).
     * Сравнение: больше чем или равно. && логическое И (AND).
     * Сравнение: меньше чем или равно.
     * Использование тернарного оператора ? (c ? x : y Если c — ненулевое значение (true),
     то вычисляется x, в противном случае — y)
    */
    if(uAge >= 19 && uAge <= 24) (uSex1 == true) ? cout << "21.4" : cout << "19,5";
    if(uAge >= 25 && uAge <= 34) (uSex1 == true) ? cout << "21.6" : cout << "23.2";
    if(uAge >= 35 && uAge <= 44) (uSex1 == true) ? cout << "22.9" : cout << "23.4";
    if(uAge >= 45 && uAge <= 54) (uSex1 == true) ? cout << "25.8" : cout << "25.2";
    if(uAge > 55) (uSex1 == true ) ? cout << "26.6" : cout << "27.3";
}

/*==========================================================================*/
/* main - главная функция с которой начинается исполнение программы         */
/*==========================================================================*/
int main(){

    /* использование std::cout только в С++ */
    // \t - табуляция по горизонтали. \n - перевод каретки на следующую строку
    cout << "\t\tКалькулятор для расчета идеального веса.\n";

    cout << "\tВведите возраст: ";

    // объявление переменной (возраст) типа double.
    double userAge;

    // присвоение значения переменной (возраст).
    cin >> userAge;

    cout << "\tВведите вес (кг): ";

    // объявление переменной (вес) типа double.
    double userWeight;

    // присвоение значения переменной (вес).
    cin >> userWeight;

    cout << "\tВведите рост (см): ";

    // объявление переменной (рост) типа double.
    double userHeight;

    // присвоение значения переменной (рост).
    cin >> userHeight;

    cout << "\tЕсли мужчина введите 1, женщина 0: ";

    // объявление логической переменной переменной (пол) типа bool.
    bool userSex;

    // присвоение значения переменной (пол).
    cin >> userSex;
    //cout << "вывод пола = " << userSex;

    //Идеальный вес по индексу массы тела (Кетле)
    //индекс = вес, кг/(рост, м)2
    // объявление переменной (ИМТ) типа double.
    double idealIndex;

    // присвоение значения переменной (ИМТ), используя вызов функции \
    с аргументами (вес, рост).
    idealIndex = idealIndexWeight(userWeight, userHeight);

    // задаем ширину поля 70 символов
    cout.width(70);

    // устанавливает символ заполнитель тире
    cout.fill('-');

    // Вывод на экран решения
    // устанвливаем отступ
    cout << "\n\t";

    cout << "\n\tИдеальный вес по индексу массы тела:\n";

    //проверка идеал
    userSex == true ? cout << "\tПол: мужской\n" : cout << "\tПол: женский\n";

    // Фиксированная форма вывода вещественных чисел
    cout.setf(ios::fixed);

    // setprecision(n) Определяет количество цифр (n-1) в дробной части числа
    cout << "\tВаш ИМТ: "<< setprecision(2) << idealIndex <<"\n";
    cout << "\tСостояние здоровья: " ;

    // вызов функции вывода на экран с агрументом idealIndex (ИМТ)
    categoryIndexPrint(idealIndex);
    cout <<"\n";
    cout << "\tНорма ИМТ для Вас:";

    // вызов функции вывода на экран с агрументами userAge(возраст) и userSex(пол)
    standardIndexPrint(userAge, userSex);
    cout <<"\n";

    // вывод на экран значения с использованием вызова функции \
    агрументами userHeight(вес) и userSex(пол)
    cout << "\tИдеальный вес = " << idealWeight(userHeight, userSex) <<" кг.\n";

    return 0;
}
